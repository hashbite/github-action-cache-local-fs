on: push
name: Rsync Test
jobs:
  build:
    name: Build
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/checkout@v2

      - name: rm dist for demonstration purposes
        run: rm -rf ./dist

      - name: show project root disk usage
        run: du -h -d 2 .

      - name: show npm cache disk usage
        run: du -h -d 2 ${{ steps.npm-cache-dir.outputs.dir }}

      - uses: ./
        name: "cache node-modules (absolute example)"
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          cache-name: node-modules
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-cache-${{ env.cache-name }}-

      - uses: ./
        name: "cache dist dir (relative example)"
        id: dist-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        env:
          cache-name: dist-cache
        with:
          path: ./dist
          key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-cache-${{ env.cache-name }}-

      - name: show project root disk usage
        run: du -h -d 2 .

      - name: show npm cache disk usage
        run: du -h -d 2 ${{ steps.npm-cache-dir.outputs.dir }}

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build